library("tm")
library("SnowballC") #text stemming
library("wordcloud")
library("RColorBrewer")
library("slam")
##########################
# Lire le fichier texte
filePath <- "uniforme.csv"
text <- readLines(filePath)
# Charger les donn?es comme un corpus (ensemble de documents)
#La fonction VectorSource() se charge de la cr?ation du corpus de textes (ensemble de vecteurs de textes)
docs <- Corpus(VectorSource(text))
#consultation du document
inspect(docs)
toSpace <- content_transformer(function (x , pattern ) gsub(pattern, " ", x))
docs <- tm_map(docs, toSpace, "/")
docs <- tm_map(docs, toSpace, "@")
docs <- tm_map(docs, toSpace, "\\|")
#consultation du document
inspect(docs)
# Convertir le texte en minuscule
docs <- tm_map(docs, content_transformer(tolower))
# Supprimer les nombres
docs <- tm_map(docs, removeNumbers)
# Supprimer les ponctuations
docs <- tm_map(docs, removePunctuation)
# Supprimer les mots vides anglais
docs <- tm_map(docs, removeWords, c("la", "je","suis","ca","va","?tre","car","veux","?","mon","?tant",
"une","on","doit","lui","plus","en","tout","des","de","d","les","du","qui","au","est","nous","parce","que",
"tr?s","le","apr?s","celle","notre","d","sur","?a","me","ses","qui","dans","a"))
# Supprimer les mots vides anglais
docs <- tm_map(docs, removeWords, c("la", "je","suis","ca","va","être","car","veux","à","mon","étant",
"une","on","doit","lui","plus","en","tout","des","de","d","les","du","qui","au","est","nous","parce","que",
"très","le","après","celle","notre","d","sur","ca","me","ses","qui","dans","a"))
# Supprimer les espaces vides suppl?mentaires
docs <- tm_map(docs, stripWhitespace)
# Text stemming
docs <- tm_map(docs, stemDocument)
#consultation du document
inspect(docs)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 10) #on affiche que les 10 mots les plus fr?quencts
set.seed(1234)
wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words=200, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
findFreqTerms(dtm, lowfreq = 4) #les mots qui sont fr?quents au moins 4 fois dans le texte
findAssocs(dtm, terms = "MOT", corlimit = 0.3) #####ici change
#La matrice des mots les plus fr?quents
head(d, 10)
barplot(d[1:10,]$freq, las = 2, names.arg = d[1:10,]$word,
col ="lightblue", main ="Most frequent words",
ylab = "Word frequencies")
set.seed(1234)
wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words=50, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
set.seed(1234)
wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words=80, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words=100, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
set.seed(123)
wordcloud(words = d$word, freq = d$freq, min.freq = 1,
max.words=123, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
findFreqTerms(dtm, lowfreq = 4) #les mots qui sont fr?quents au moins 4 fois dans le texte
findAssocs(dtm, terms = "uniformes", corlimit = 0.3)
findAssocs(dtm, terms = "uniforme", corlimit = 0.3)
findAssocs(dtm, terms = "luniforme", corlimit = 0.3)
findFreqTerms(dtm, lowfreq = 4)
findAssocs(dtm, terms = "luniforme", corlimit = 0.3)
